@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
  "2": 2px,
  "4": 4px,
  "8": 8px,
  "16": 16px,
);
$justify-contents: (
  "start": flex-start,
  "end": flex-end,
  "center": center,
  "between": space-between,
);

// base layout classes
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}

// grid gap classes
@each $k, $v in $grid-gaps {
  .gap-#{$k} > * {
    padding: $v;
  }
  .gap-#{$k} {
    margin-left: -$v;
    margin-right: -$v;
  }
}

// justify content classes
@each $k, $v in $justify-contents {
  .justify-#{$k} {
    justify-content: $v;
  }
}

// col classes
@include xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
